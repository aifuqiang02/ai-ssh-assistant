// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ==================== 用户相关表 ====================

// 用户表 - 简化版本，适用于 SQLite
model User {
  id        String   @id @default(cuid())
  uuid      String   @unique @default(cuid()) // 兼容 lobe-chat 的 uuid 设计
  email     String?  @unique
  username  String?  @unique
  password  String? // 可选，支持第三方登录
  avatar    String?
  role      String   @default("USER") // 使用字符串而不是枚举
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 用户设置 - 使用文本存储 JSON
  settings String? // 存储用户偏好设置（JSON 字符串）

  // 关联关系
  sshConnections SSHConnection[]
  chatSessions   ChatSession[]
  messages       Message[]
  commandLogs    CommandLog[]

  @@map("users")
}

// SSH 连接配置表
model SSHConnection {
  id       String @id @default(cuid())
  name     String // 连接名称
  host     String // 主机地址
  port     Int    @default(22) // 端口
  username String // 用户名

  // 认证信息
  authType   String // 认证类型：PASSWORD, KEY, AGENT
  password   String? // 密码（加密存储）
  privateKey String? // 私钥路径或内容
  publicKey  String? // 公钥内容
  passphrase String? // 私钥密码（加密存储）

  // 连接状态
  status    String    @default("DISCONNECTED") // CONNECTED, DISCONNECTED, CONNECTING, ERROR
  lastUsed  DateTime?
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // 连接元数据 - 使用文本存储
  meta String? // 存储额外的元数据信息（JSON 字符串）

  // 关联用户
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // 关联关系
  chatSessions ChatSession[]
  commandLogs  CommandLog[]

  @@map("ssh_connections")
}

// 聊天会话表
model ChatSession {
  id        String   @id @default(cuid())
  title     String // 会话标题
  type      String   @default("CHAT") // 会话类型：CHAT, SSH, MIXED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 会话配置 - 使用文本存储
  config String? // AI 配置信息（模型参数、系统角色等）JSON 字符串

  // 会话元数据 - 使用文本存储
  meta String? // 存储会话的元数据（描述、标签等）JSON 字符串

  // 关联用户和 SSH 连接
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  sshConnectionId String?
  sshConnection   SSHConnection? @relation(fields: [sshConnectionId], references: [id])

  // 关联关系
  messages Message[]

  @@map("chat_sessions")
}

// 消息表
model Message {
  id        String   @id @default(cuid())
  content   String // 消息内容
  role      String // 消息角色：USER, ASSISTANT, SYSTEM, FUNCTION, TOOL
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 消息元数据 - 使用文本存储
  meta  String? // 消息元数据 JSON 字符串
  extra String? // 额外信息（AI模型、token数等）JSON 字符串

  // 消息状态
  isDeleted Boolean @default(false)
  isEdited  Boolean @default(false)

  // 插件相关 - 使用文本存储
  plugin      String? // 插件信息 JSON 字符串
  pluginState String? // 插件状态 JSON 字符串

  // 翻译相关
  translate String? // 翻译信息 JSON 字符串

  // TTS 相关
  tts String? // 语音合成信息 JSON 字符串

  // 关联会话和用户
  sessionId String
  session   ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("messages")
}

// 命令日志表
model CommandLog {
  id        String   @id @default(cuid())
  command   String // 执行的命令
  output    String? // 命令输出
  exitCode  Int? // 退出码
  duration  Int? // 执行时间（毫秒）
  createdAt DateTime @default(now())

  // 安全级别
  safetyLevel String @default("SAFE") // SAFE, CAUTION, DANGEROUS

  // 命令元数据
  metadata String? // 额外的元数据信息 JSON 字符串

  // 关联用户和 SSH 连接
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  sshConnectionId String?
  sshConnection   SSHConnection? @relation(fields: [sshConnectionId], references: [id])

  @@map("command_logs")
}
